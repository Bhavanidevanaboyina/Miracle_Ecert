# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#server.port=8081
#server.port=8081
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.url=jdbc:mysql://44.212.8.50:3306/tco?autoReconnect=true
##spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mysql://44.212.8.50:3306/ecert
#spring.datasource.username=ecertadmin
#spring.datasource.password=k6x10of1IzFDa4DsuC3AT
server.port=8081
spring.application.name=ecert
spring.datasource.url=jdbc:mysql://34.192.6.3:3306/ecert
spring.datasource.username=ecertadmin
spring.datasource.password=k6x10of1IzFDa4DsuC3AT
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
cors.origins = *
jwt.secret=Miracle_Ecert
jwt.password=$2a$10$aMc2ZkaO9OL3shFHWGjIeevwofc5ICyXnVYoSUm2K/VNGygEvkm2K
jwt.password.decrypt=password

spring.main.allow-circular-references: true
spring.servlet.multipart.location=/data/upload_tmp
loginUrl=https://uat-hubble-api.miraclesoft.com/v2/mcafe/employee/login
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# spring.jpa.hibernate.ddl-auto=create
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

